@model MejjHonda.Models.MEJJ_Articulo
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    String styleColumn = "padding:0px;float:left";
}
<h2>Crear Artículo</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-12" style=@styleColumn>
            <div class="col-md-6" style=@styleColumn>
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6" style=@styleColumn>
                @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-12" style=@styleColumn>
            <div class="form-group col-md-6" style=@styleColumn>
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6" style=@styleColumn>
                @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-12" style=@styleColumn>
            <div class="form-group col-md-6" style=@styleColumn>
                @Html.LabelFor(model => model.Tamanio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tamanio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tamanio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12" style=@styleColumn>
            <input type="submit" value="Registrar" class="fa-pull-right btn btn-success" />
            @Html.ActionLink(" ", "Index", null, new { @class = "fa-pull-right btn btn-info far fa-arrow-alt-circle-left", @style="margin-right:10px" })
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}